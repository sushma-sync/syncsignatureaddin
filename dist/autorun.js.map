{"version":3,"file":"autorun.js","mappings":"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","sources":["webpack://office-addin-taskpane/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/compat get default export","webpack://office-addin-taskpane/webpack/runtime/define property getters","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./src/runtime/Js/autorunshared.js","webpack://office-addin-taskpane/./src/runtime/HTML/autorunweb.html"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n\n  // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n  url = String(url.__esModule ? url.default : url);\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t837: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// Contains code for event-based activation on Outlook on web, on Windows, and on Mac (new UI preview).\n\n/**\n * Checks if signature exists.\n * If not, displays the information bar for user.\n * If exists, insert signature into new item (appointment or message).\n * @param {*} eventObj Office event object\n * @returns\n */\nfunction checkSignature(eventObj) {\n  let user_info_str = Office.context.roamingSettings.get(\"user_info\");\n  if (!user_info_str) {\n    display_insight_infobar();\n  } else {\n    let user_info = JSON.parse(user_info_str);\n\n    if (Office.context.mailbox.item.getComposeTypeAsync) {\n      //Find out if the compose type is \"newEmail\", \"reply\", or \"forward\" so that we can apply the correct template.\n      Office.context.mailbox.item.getComposeTypeAsync(\n        {\n          asyncContext: {\n            user_info: user_info,\n            eventObj: eventObj,\n          },\n        },\n        function (asyncResult) {\n          if (asyncResult.status === \"succeeded\") {\n            insert_auto_signature(\n              asyncResult.value.composeType,\n              asyncResult.asyncContext.user_info,\n              asyncResult.asyncContext.eventObj\n            );\n          }\n        }\n      );\n    } else {\n      // Appointment item. Just use newMail pattern\n      let user_info = JSON.parse(user_info_str);\n      insert_auto_signature(\"newMail\", user_info, eventObj);\n    }\n  }\n}\n\n/**\n * For Outlook on Windows and on Mac only. Insert signature into appointment or message.\n * Outlook on Windows and on Mac can use setSignatureAsync method on appointments and messages.\n * @param {*} compose_type The compose type (reply, forward, newMail)\n * @param {*} user_info Information details about the user\n * @param {*} eventObj Office event object\n */\nfunction insert_auto_signature(compose_type, user_info, eventObj) {\n  let template_name = get_template_name(compose_type);\n  let signature_info = get_signature_info(template_name, user_info);\n  addTemplateSignature(signature_info, eventObj);\n}\n\n/**\n * \n * @param {*} signatureDetails object containing:\n *  \"signature\": The signature HTML of the template,\n    \"logoBase64\": The base64 encoded logo image,\n    \"logoFileName\": The filename of the logo image\n * @param {*} eventObj \n * @param {*} signatureImageBase64 \n */\nfunction addTemplateSignature(signatureDetails, eventObj, signatureImageBase64) {\n  if (is_valid_data(signatureDetails.logoBase64) === true) {\n    //If a base64 image was passed we need to attach it.\n    Office.context.mailbox.item.addFileAttachmentFromBase64Async(\n      signatureDetails.logoBase64,\n      signatureDetails.logoFileName,\n      {\n        isInline: true,\n      },\n      function (result) {\n        //After image is attached, insert the signature\n        Office.context.mailbox.item.body.setSignatureAsync(\n          signatureDetails.signature,\n          {\n            coercionType: \"html\",\n            asyncContext: eventObj,\n          },\n          function (asyncResult) {\n            asyncResult.asyncContext.completed();\n          }\n        );\n      }\n    );\n  } else {\n    //Image is not embedded, or is referenced from template HTML\n    Office.context.mailbox.item.body.setSignatureAsync(\n      signatureDetails.signature,\n      {\n        coercionType: \"html\",\n        asyncContext: eventObj,\n      },\n      function (asyncResult) {\n        asyncResult.asyncContext.completed();\n      }\n    );\n  }\n}\n\n/**\n * Creates information bar to display when new message or appointment is created\n */\nfunction display_insight_infobar() {\n  Office.context.mailbox.item.notificationMessages.addAsync(\"fd90eb33431b46f58a68720c36154b4a\", {\n    type: \"insightMessage\",\n    message: \"Please set your signature with the Office Add-ins sample.\",\n    icon: \"Icon.16x16\",\n    actions: [\n      {\n        actionType: \"showTaskPane\",\n        actionText: \"Set signatures\",\n        commandId: get_command_id(),\n        contextData: \"{''}\",\n      },\n    ],\n  });\n}\n\n/**\n * Gets template name (A,B,C) mapped based on the compose type\n * @param {*} compose_type The compose type (reply, forward, newMail)\n * @returns Name of the template to use for the compose type\n */\nfunction get_template_name(compose_type) {\n  if (compose_type === \"reply\") return Office.context.roamingSettings.get(\"reply\");\n  if (compose_type === \"forward\") return Office.context.roamingSettings.get(\"forward\");\n  return Office.context.roamingSettings.get(\"newMail\");\n}\n\n/**\n * Gets HTML signature in requested template format for given user\n * @param {\\} template_name Which template format to use (A,B,C)\n * @param {*} user_info Information details about the user\n * @returns HTML signature in requested template format\n */\nfunction get_signature_info(template_name, user_info) {\n  if (template_name === \"templateB\") return get_template_B_info(user_info);\n  if (template_name === \"templateC\") return get_template_C_info(user_info);\n  return get_template_A_info(user_info);\n}\n\n/**\n * Gets correct command id to match to item type (appointment or message)\n * @returns The command id\n */\nfunction get_command_id() {\n  if (Office.context.mailbox.item.itemType == \"appointment\") {\n    return \"MRCS_TpBtn1\";\n  }\n  return \"MRCS_TpBtn0\";\n}\n\n/**\n * Gets HTML string for template A\n * Embeds the signature logo image into the HTML string\n * @param {*} user_info Information details about the user\n * @returns Object containing:\n *  \"signature\": The signature HTML of template A,\n    \"logoBase64\": The base64 encoded logo image,\n    \"logoFileName\": The filename of the logo image\n */\nfunction get_template_A_info(user_info) {\n  const logoFileName = \"sample-logo.png\";\n  let str = \"\";\n  if (is_valid_data(user_info.greeting)) {\n    str += user_info.greeting + \"<br/>\";\n  }\n\n  str += \"<table>\";\n  str += \"<tr>\";\n  // Embed the logo using <img src='cid:...\n  str +=\n    \"<td style='border-right: 1px solid #000000; padding-right: 5px;'><img src='cid:\" +\n    logoFileName +\n    \"' alt='MS Logo' width='24' height='24' /></td>\";\n  str += \"<td style='padding-left: 5px;'>\";\n  str += \"<strong>\" + user_info.name + \"</strong>\";\n  str += is_valid_data(user_info.pronoun) ? \"&nbsp;\" + user_info.pronoun : \"\";\n  str += \"<br/>\";\n  str += is_valid_data(user_info.job) ? user_info.job + \"<br/>\" : \"\";\n  str += user_info.email + \"<br/>\";\n  str += is_valid_data(user_info.phone) ? user_info.phone + \"<br/>\" : \"\";\n  str += \"</td>\";\n  str += \"</tr>\";\n  str += \"</table>\";\n\n  // return object with signature HTML, logo image base64 string, and filename to reference it with.\n  return {\n    signature: str,\n    logoBase64:\n      \"iVBORw0KGgoAAAANSUhEUgAAACIAAAAiCAYAAAA6RwvCAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAEeSURBVFhHzdhBEoIwDIVh4EoeQJd6YrceQM+kvo5hQNokLymO/4aF0/ajlBl1fL4bEp0uj3K9XQ/lGi0MEcB3UdD0uVK1EEj7TIuGeBaKYCgIswCLcUMid8mMcUEiCMk71oRYE+Etsd4UD0aFeBBSFtOEMAgpg6lCIggpitlAMggpgllBeiAkFjNDeiIkBlMgeyAkL6Z6WJdlEJJnjvF4vje/BvRALNN23tyRXzVpd22dHSZtLhjMHemB8cxRINZZyGCssbL2vCN7YLwItHo0PTEMAm3OSA8Mi0DVw5rBRBCoCkERTBSBmhDEYDII5PqlZy1iZSGQuiOSZ6JW3rEuCIpgmDFuCGImZuEUBHkWiOweDUHaQhEE+pM/aobhBZaOpYLJeeeoAAAAAElFTkSuQmCC\",\n    logoFileName: logoFileName,\n  };\n}\n\n/**\n * Gets HTML string for template B\n * References the signature logo image from the HTML\n * @param {*} user_info Information details about the user\n * @returns Object containing:\n *  \"signature\": The signature HTML of template B,\n    \"logoBase64\": null since this template references the image and does not embed it ,\n    \"logoFileName\": null since this template references the image and does not embed it\n */\nfunction get_template_B_info(user_info) {\n  let str = \"\";\n  if (is_valid_data(user_info.greeting)) {\n    str += user_info.greeting + \"<br/>\";\n  }\n\n  str += \"<table>\";\n  str += \"<tr>\";\n  // Reference the logo using a URI to the web server <img src='https://...\n  str +=\n    \"<td style='border-right: 1px solid #000000; padding-right: 5px;'><img src='https://officedev.github.io/Office-Add-in-samples/Samples/outlook-set-signature/assets/sample-logo.png' alt='Logo' /></td>\";\n  str += \"<td style='padding-left: 5px;'>\";\n  str += \"<strong>\" + user_info.name + \"</strong>\";\n  str += is_valid_data(user_info.pronoun) ? \"&nbsp;\" + user_info.pronoun : \"\";\n  str += \"<br/>\";\n  str += user_info.email + \"<br/>\";\n  str += is_valid_data(user_info.phone) ? user_info.phone + \"<br/>\" : \"\";\n  str += \"</td>\";\n  str += \"</tr>\";\n  str += \"</table>\";\n\n  return {\n    signature: str,\n    logoBase64: null,\n    logoFileName: null,\n  };\n}\n\n/**\n * Gets HTML string for template C\n * @param {*} user_info Information details about the user\n * @returns Object containing:\n *  \"signature\": The signature HTML of template C,\n    \"logoBase64\": null since there is no image,\n    \"logoFileName\": null since there is no image\n */\nfunction get_template_C_info(user_info) {\n  let str = \"\";\n  if (is_valid_data(user_info.greeting)) {\n    str += user_info.greeting + \"<br/>\";\n  }\n\n  str += user_info.name;\n\n  return {\n    signature: str,\n    logoBase64: null,\n    logoFileName: null,\n  };\n}\n\n/**\n * Validates if str parameter contains text.\n * @param {*} str String to validate\n * @returns true if string is valid; otherwise, false.\n */\nfunction is_valid_data(str) {\n  return str !== null && str !== undefined && str !== \"\";\n}\n\nOffice.actions.associate(\"checkSignature\", checkSignature);\n","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"../Js/autorunshared.js\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../Js/autorunweb.js\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <title></title> <\" + \"script src=\\\"https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.9.1.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\"><\" + \"/script> <\" + \"script src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\"><\" + \"/script> </head> <body> </body> </html>\";\n// Exports\nexport default code;"],"names":["module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","insert_auto_signature","compose_type","user_info","eventObj","template_name","Office","context","roamingSettings","get_template_name","signature_info","str","is_valid_data","greeting","name","pronoun","email","phone","signature","logoBase64","logoFileName","get_template_B_info","get_template_C_info","job","get_template_A_info","get_signature_info","signatureDetails","signatureImageBase64","mailbox","item","addFileAttachmentFromBase64Async","isInline","result","body","setSignatureAsync","coercionType","asyncContext","asyncResult","completed","addTemplateSignature","actions","associate","user_info_str","JSON","parse","getComposeTypeAsync","status","value","composeType","notificationMessages","addAsync","type","message","icon","actionType","actionText","commandId","itemType","contextData","___HTML_LOADER_IMPORT_0___","URL","___HTML_LOADER_IMPORT_1___"],"sourceRoot":""}